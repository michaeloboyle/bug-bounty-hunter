version: "3.9"
services:
  api:
    image: python:3.11-slim
    container_name: bbops-api
    working_dir: /app
    command: bash -lc "pip install uvicorn fastapi python-socketio httpx pydantic && uvicorn api.main:app --host 0.0.0.0 --port 8080 --reload"
    volumes:
      - ../engine/api:/app/api:ro
      - ../profiles:/app/profiles:ro
      - ../ui/dist:/app/static:ro
    environment:
      - PORT=8080
      - DB_URL=${DB_URL}
      - REDIS_URL=redis://redis:6379/0
      - ARTIFACT_S3=${ARTIFACT_S3}
      - DEFAULT_RPS=${DEFAULT_RPS:-0.5}
    ports: ["8080:8080"]
    depends_on: [db, redis, minio]

  workers:
    image: python:3.11-slim
    container_name: bbops-workers
    working_dir: /app
    command: bash -lc "pip install requests && python -u worker_stub.py"
    volumes:
      - ../engine/scanner-farm:/app/scanner-farm:ro
      - ../engine/safe-poc:/app/safe-poc:ro
      - ../engine/policy:/app/policy:ro
      - ../engine/dupdb:/app/dupdb:ro
      - ../profiles:/app/profiles:ro
      - ./stubs/worker_stub.py:/app/worker_stub.py:ro
    environment:
      - REDIS_URL=redis://redis:6379/0
      - ARTIFACT_S3=${ARTIFACT_S3}
      - DEFAULT_RPS=${DEFAULT_RPS:-0.5}
    depends_on: [redis, minio]

  ui:
    image: nginx:1.27-alpine
    container_name: bbops-ui
    ports: ["4173:80"]
    volumes:
      - ../ui/dist:/usr/share/nginx/html:ro
    depends_on: [api]

  db:
    image: postgres:16-alpine
    container_name: bbops-db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-bbops}
    ports: ["5432:5432"]
    volumes: [dbdata:/var/lib/postgresql/data]

  redis:
    image: redis:7-alpine
    container_name: bbops-redis
    ports: ["6379:6379"]

  minio:
    image: quay.io/minio/minio:RELEASE.2025-02-28T09-55-16Z
    container_name: bbops-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minio}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minio123}
    ports: ["9000:9000", "9001:9001"]
    volumes: [miniodata:/data]
volumes: { dbdata: {}, miniodata: {} }
